services:
    mongo:
        profiles:
            - infra
            - api
            - worker
            - all
        image: mongo
        hostname: mongo
        restart: always
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}
        networks:
            - uservicedemo-network

    postgres:
        profiles:
            - infra
            - api
            - worker
            - all
        image: postgres
        hostname: postgres
        restart: always
        shm_size: 128mb
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - 5432:5432
        networks:
            - uservicedemo-network

    activemq:
        profiles:
            - infra
            - api
            - worker
            - all
        image: apache/activemq-classic
        hostname: activemq
        restart: always
        container_name: activemq
        ports:
            - '8161:8161'
            - '61616:61616'
            - '5672:5672'
        networks:
            - uservicedemo-network

    elasticsearch:
        profiles:
            - infra
            - api
            - worker
            - all
        image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
        restart: always
        ports:
            - 9200:9200
        environment:
            - node.name=es01
            - cluster.name=${ELASTIC_CLUSTER_NAME}
            - discovery.type=single-node
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms4g -Xmx4g'
            - xpack.security.enabled=false
            - xpack.security.enrollment.enabled=false
            - xpack.license.self_generated.type=${ELASTIC_LICENSE}
        networks:
            - uservicedemo-network

    uservicedemo-api:
        profiles:
            - api
            - all
        depends_on:
            - activemq
            - mongo
            - postgres
        build:
            context: .
            dockerfile: Dockerfile
            target: api
        ports:
            - 8080:8080
        environment:
            ASPNETCORE_ENVIRONMENT: ${ENV_NAME}
            AGTEC_ConnectionStrings__uServiceDemoDB: ${POSTGRESS_CONN_STR}
            AGTEC_ActiveMQ__ConnectionString: ${AMQ_CONN_STR}
            AGTEC_DocumentDBConfiguration__ConnectionString: ${MONGO_CONN_STR}
            AGTEC_DocumentDBConfiguration__Database: ${MONGO_DB_NAME}
            AGTEC_SearchDBConfiguration__Username: ${ELASTIC_USERNAME}
            AGTEC_SearchDBConfiguration__Password: ${ELASTIC_PASSWORD}
            AGTEC_SearchDBConfiguration__Host: ${ELASTIC_HOSTS}
        networks:
            - uservicedemo-network

    uservicedemo-worker:
        profiles:
            - worker
            - all
        depends_on:
            - activemq
            - mongo
            - postgres
        build:
            context: .
            dockerfile: Dockerfile
            target: worker
        environment:
            ASPNETCORE_ENVIRONMENT: ${ENV_NAME}
            AGTEC_ConnectionStrings__uServiceDemoDB: ${POSTGRESS_CONN_STR}
            AGTEC_ActiveMQ__ConnectionString: ${AMQ_CONN_STR}
            AGTEC_DocumentDBConfiguration__ConnectionString: ${MONGO_CONN_STR}
            AGTEC_DocumentDBConfiguration__Database: ${MONGO_DB_NAME}
            AGTEC_SearchDBConfiguration__Username: ${ELASTIC_USERNAME}
            AGTEC_SearchDBConfiguration__Password: ${ELASTIC_PASSWORD}
            AGTEC_SearchDBConfiguration__Host: ${ELASTIC_HOSTS}
        networks:
            - uservicedemo-network

networks:
    uservicedemo-network:
        driver: bridge
